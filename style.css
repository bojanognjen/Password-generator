@font-face {
    font-family: 'JetBrains Mono';  /* Name to use in CSS */
    src: url('./assets/fonts/static/JetBrainsMono-Bold.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

:root {

    /* Primary Colors */

    --light-green: hsl(127deg 100% 82%);
    --red: hsl(0deg 91% 63%);
    --orange: hsl(13deg 95% 66%);
    --dark-yellow: hsl(42deg 91% 68%);

    /* Neutral Colors */

    --background: hsl(248deg 15% 11%);
    --white: hsl(252deg 11% 91%);
    --gray: hsl(251deg 9% 53%);
    --dark-gray: hsl(248deg 10% 15%);

}

/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
  }
  
  /* 2. Remove default margin */
  * {
    margin: 0;
  }
  
  body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
  }
  
  /* 5. Improve media defaults */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  
  /* 6. Inherit fonts for form controls */
  input, button, textarea, select {
    font: inherit;
  }
  
  /* 7. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  
  /* 8. Improve line wrapping */
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }
  
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }

  body {
    min-height: 100vh;
    display: grid;
    place-content: center;
    font-family: 'JetBrains Mono';
    color: var(--white);
    background-color: var(--background);
  }

  .container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .title {
    color: var(--gray);
    font-size: 1rem;
    text-align: center;
  }

  .heading {
    background-color: var(--dark-gray);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.1rem;
  }

  .heading input,
  .heading input:focus{
    background: transparent;
    border: none;
    color: var(--white);
    outline: none;
  }

  .heading input::placeholder {
    font-size: 1.5rem;
  }

  .heading .copy {
    width: 21px;
    height: 24px;
  }

  .hidden1,
  .hidden2 {
    display: none;
    color: red;
  }

  .form {
    background-color: var(--dark-gray);
    padding: 1.1rem;
    display: grid;
    gap: 2rem;
  }

  .form .length {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .form .length .character {
    font-size: 18px;
  }

  .form .length .number {
    color:var(--light-green);
    font-size: 1.5rem;
  }

  .slider {
    appearance: none;
    height: .5rem;
    background-color: var(--background);
    cursor: pointer;
  }

  .slider::-moz-range-thumb,
  .slider::-webkit-slider-thumb {
    border-radius: 50%;
    background-color: var(--white);
    height: 1.75rem;
    width: 1.75rem;
    border: none;
  }

  .slider::-webkit-slider-thumb:hover,
  .slider::-webkit-slider-thumb:active {
    background-color: var(--background);
    outline: 2px solid var(--light-green);
    cursor: pointer;
  }



  .slider::-moz-range-thumb:active,
  .slider::-moz-range-thumb:hover {
    background-color: var(--background);
    outline: 2px solid var(--light-green);
    cursor: pointer;
  }

  .list {
    display: grid;
    gap: 1.25rem;
    font-size: 1.125rem;
  }

  .list .checkbox-container {
    display: flex;
    align-items: center;
  }

  .list .checkbox-container input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  .list .checkbox-container label {
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .list .checkbox-container label::before {
    content: '';
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid var(--white);
    margin-right: 1.25rem;
  }

  .list .checkbox-container label:hover::before,
  .list .checkbox-container input[type="checkbox"]:hover + label::before,
  .list .checkbox-container input[type="checkbox"]:checked + label::before  {
    background-color: var(--light-green);
    border-color: var(--light-green);
  }

  .list .checkbox-container input[type="checkbox"]:checked + label::before {
    content: url(assets/images/icon-check.svg);
    color: var(--background);
    display: grid;
    place-content: center;
  }

  .strength {
    background-color: #18171f;
    padding: 1em;
    display: flex;
    justify-content: space-between;
  }

  .strength .strength-title {
    text-transform: uppercase;
    color: var(--gray);
  }

  .ribs {
    width: 3.96em;
    height: 1.75em;
    display: flex;
    justify-content: space-between;
  }

  .rib {
    border: 2px solid var(--white);
    width: 0.625rem;
  }

  .button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1.5em;
    background-color: var(--light-green);
    text-transform: uppercase;
    padding: 1em;
    border: none;
    cursor: pointer;
  }

  .button:hover {
    background-color: transparent;
    color: var(--light-green);
    outline:2px solid var(--light-green);
  }

  .button:hover img {
    filter: invert(83%) sepia(51%) saturate(347%) hue-rotate(69deg);
  }

  .heading img:hover {
    cursor: pointer;
  }
